import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import argrelmin

max_frames=250

siteswaps = [5,441,423]

trajectories = {}

trajectories[5] = {}
trajectories[5]['x'] = [536, 530, 528, 526, 524, 522, 519, 516, 517, 518, 518, 520, 520, 514, 513, 515, 520, 529, 538, 549, 557, 562, 567, 571, 575, 579, 585, 589, 594, 600, 606, 612, 617, 624, 631, 635, 643, 650, 655, 663, 679, 686, 696, 706, 713, 719, 726, 734, 736, 722, 693, 676, 659, 646, 642, 633, 624, 617, 605, 591, 580, 569, 559, 550, 542, 533, 522, 513, 494, 484, 475, 469, 459, 454, 448, 439, 431, 422, 414, 408, 404, 403, 410, 432, 460, 486, 501, 511, 506, 510, 515, 519, 523, 526, 532, 537, 540, 548, 553, 558, 564, 571, 577, 582, 588, 595, 600, 606, 612, 619, 627, 635, 643, 650, 658, 666, 672, 672, 664, 650, 637, 632, 621, 611, 600, 589, 579, 569, 559, 549, 540, 532, 525, 517, 507, 500, 493, 485, 478, 471, 464, 458, 453, 447, 439, 432, 426, 422, 417, 416, 424, 446, 466, 498, 508, 513, 515, 517, 519, 522, 524, 527, 530, 535, 541, 545, 549, 552, 558, 563, 568, 575, 579, 583, 589, 594, 598, 605, 612, 618, 628, 640, 646, 651, 651, 645, 636, 627, 621, 614, 599, 589, 581, 581, 572, 555, 546, 537, 530, 522, 514, 505, 498, 492, 483, 476, 469, 462, 453, 442, 434, 430, 424, 417, 411, 406, 403, 401, 404, 424, 452, 475, 493, 502, 499, 502, 505, 505, 506, 510, 511, 513, 517, 519, 520, 526, 530, 535, 540, 542, 545, 548, 551, 558, 564, 569, 573, 577, 584, 589, 595, 603, 608, 609, 608, 602, 599, 584, 578, 572, 567, 560, 551, 542, 534, 521, 513, 507, 499, 495, 491, 486, 480, 475, 467, 463, 458, 453, 449, 444, 440, 435, 431, 429, 426, 426, 436, 457, 476, 493, 497, 500, 502, 512, 519, 524, 526, 529, 536, 542, 550, 553, 558, 568, 576, 582, 589, 597, 605, 611, 616, 622, 628, 636, 647, 657, 667, 677, 687, 695, 700, 694, 676, 652, 640, 631, 616, 605, 597, 591, 574, 560, 549, 539, 529, 518, 507, 497, 485, 476, 468, 458, 448, 439, 432, 422, 417, 406, 389, 383, 378, 367, 363, 364, 375, 395, 434, 474, 498, 511, 513, 517, 518, 519, 524, 530, 534, 540, 545, 549, 553, 558, 565, 568, 574, 580, 588, 597, 605, 612, 618, 625, 632, 639, 648, 657, 665, 670, 669, 663, 645, 624, 619, 608, 598, 587, 585, 578, 566, 556, 547, 541, 535, 526, 518, 507, 497, 492, 484, 477, 473, 467, 460, 453, 447, 443, 438, 435, 432, 428, 428, 424, 427, 437, 454, 473, 484, 492, 496, 501, 506, 510, 515, 523, 530, 535, 539, 546, 555, 558, 565, 571, 577, 587, 596, 601, 609, 616, 626, 635, 646, 655, 659, 667, 679, 690, 696, 696, 677, 643, 617, 595, 585, 580, 577, 575, 565, 555, 547, 540, 535, 525, 521, 517, 513, 509, 502, 495, 487, 481, 475, 471, 467, 465, 462, 459, 454, 450, 447, 453, 465, 484, 495, 507, 511, 524, 533, 537, 542, 556, 569, 576, 583, 592, 603, 614, 623, 633, 645, 658, 670, 680, 690, 700, 711, 723, 738, 761, 782, 797, 810, 816, 822, 822, 808, 779, 741, 700, 669, 649, 623, 609, 601, 594, 582, 569, 558, 548, 539, 531, 523, 512, 502, 493, 482, 469, 459, 453, 443, 434, 427, 420, 417, 413, 408, 402, 396, 397, 401, 413, 435, 457, 479, 489, 489, 486, 493, 502, 511, 519, 521, 523, 535, 547, 552, 559, 568, 574, 581, 589, 596, 604, 612, 621, 629, 635, 644, 654, 666, 676, 682, 689, 702, 705, 702, 688, 662, 651, 636, 625, 611, 600, 590, 579, 568, 559, 549, 539, 530, 523, 516, 507, 497, 489, 483, 471, 463, 459, 452, 444, 437, 433, 427, 421, 413, 405, 400, 403, 401, 398, 403, 404, 405, 404, 403, 404, 403, 403, 403, 403, 403, 403, 401, 399, 398, 400, 399, 402, 407]
trajectories[5]['y'] = -np.array([1150, 1138, 1132, 1124, 1119, 1119, 1123, 1133, 1145, 1160, 1184, 1216, 1259, 1301, 1361, 1388, 1392, 1361, 1293, 1207, 1125, 1063, 1001, 939, 879, 831, 790, 755, 725, 698, 681, 665, 654, 648, 649, 657, 667, 683, 702, 726, 788, 832, 880, 930, 984, 1041, 1089, 1132, 1165, 1209, 1260, 1309, 1321, 1297, 1234, 1162, 1100, 1044, 986, 933, 887, 846, 808, 780, 759, 739, 721, 717, 717, 724, 738, 757, 779, 808, 838, 872, 918, 975, 1033, 1090, 1141, 1188, 1229, 1274, 1316, 1342, 1334, 1301, 1224, 1147, 1080, 1021, 960, 901, 856, 816, 753, 718, 699, 684, 674, 669, 672, 680, 691, 707, 725, 751, 783, 822, 865, 909, 961, 1020, 1086, 1140, 1177, 1218, 1266, 1298, 1303, 1274, 1217, 1152, 1064, 981, 936, 900, 861, 825, 793, 775, 761, 750, 745, 746, 755, 766, 782, 806, 832, 861, 898, 939, 987, 1041, 1103, 1164, 1212, 1257, 1296, 1328, 1350, 1354, 1320, 1238, 1158, 1090, 1031, 972, 917, 866, 827, 792, 757, 727, 702, 688, 680, 674, 672, 675, 686, 705, 723, 747, 779, 813, 854, 898, 989, 1070, 1115, 1161, 1204, 1248, 1304, 1334, 1351, 1334, 1266, 1197, 1125, 1088, 1017, 953, 910, 873, 836, 801, 774, 754, 740, 732, 728, 730, 739, 753, 770, 817, 851, 890, 935, 987, 1041, 1097, 1146, 1192, 1238, 1284, 1324, 1346, 1338, 1303, 1222, 1148, 1081, 1022, 973, 925, 878, 838, 807, 782, 761, 749, 732, 729, 733, 748, 764, 780, 806, 837, 872, 910, 955, 1004, 1067, 1122, 1175, 1216, 1257, 1299, 1334, 1345, 1316, 1248, 1175, 1109, 1057, 1006, 948, 902, 863, 805, 771, 755, 742, 740, 737, 739, 748, 767, 784, 813, 839, 871, 910, 955, 1008, 1064, 1121, 1176, 1221, 1265, 1307, 1339, 1352, 1345, 1305, 1234, 1142, 1051, 964, 897, 848, 807, 767, 730, 701, 678, 657, 642, 636, 635, 638, 647, 660, 676, 698, 727, 761, 799, 845, 897, 953, 1017, 1085, 1141, 1204, 1251, 1286, 1311, 1311, 1282, 1205, 1127, 1065, 1020, 947, 893, 852, 817, 786, 761, 737, 723, 713, 707, 707, 712, 724, 739, 758, 785, 814, 848, 937, 987, 1047, 1110, 1148, 1188, 1228, 1268, 1307, 1335, 1318, 1269, 1199, 1123, 1060, 1009, 952, 901, 854, 814, 779, 751, 728, 712, 700, 691, 691, 692, 710, 730, 758, 787, 820, 857, 900, 948, 1006, 1066, 1122, 1171, 1206, 1246, 1287, 1316, 1320, 1272, 1209, 1140, 1085, 1025, 962, 908, 864, 832, 790, 763, 741, 718, 703, 703, 708, 721, 738, 760, 785, 811, 840, 885, 934, 990, 1051, 1113, 1161, 1211, 1262, 1309, 1349, 1357, 1329, 1267, 1189, 1111, 1045, 983, 909, 839, 791, 758, 731, 706, 688, 676, 667, 662, 664, 672, 687, 712, 738, 766, 802, 844, 890, 939, 997, 1062, 1106, 1150, 1186, 1224, 1261, 1294, 1307, 1286, 1218, 1147, 1082, 1026, 983, 940, 895, 861, 832, 808, 790, 771, 761, 756, 759, 771, 789, 811, 833, 860, 894, 933, 976, 1022, 1071, 1122, 1201, 1246, 1290, 1328, 1345, 1332, 1266, 1191, 1115, 1053, 1001, 937, 879, 833, 795, 764, 737, 710, 696, 685, 679, 675, 680, 692, 705, 720, 740, 770, 807, 881, 942, 995, 1053, 1097, 1129, 1153, 1186, 1230, 1275, 1313, 1327, 1298, 1218, 1140, 1080, 1019, 948, 891, 842, 800, 767, 739, 715, 694, 683, 675, 674, 682, 698, 720, 746, 776, 813, 851, 897, 946, 997, 1051, 1103, 1151, 1191, 1228, 1271, 1308, 1326, 1295, 1232, 1152, 1070, 996, 931, 876, 831, 789, 724, 679, 663, 651, 639, 636, 633, 636, 647, 663, 683, 705, 734, 768, 806, 846, 893, 947, 1011, 1072, 1121, 1162, 1209, 1259, 1307, 1321, 1295, 1248, 1156, 1069, 984, 912, 865, 829, 794, 762, 732, 709, 695, 686, 681, 681, 691, 706, 727, 750, 775, 804, 840, 883, 934, 985, 1043, 1114, 1172, 1176, 1185, 1190, 1193, 1195, 1196, 1195, 1194, 1196, 1195, 1195, 1198, 1202, 1210, 1219, 1232, 1257, 1289, 1324, 1366, 1405, 1437])

trajectories[441] = {}
trajectories[441]['x'] = [644, 642, 628, 628, 623, 622, 622, 621, 614, 606, 600, 597, 597, 599, 601, 603, 607, 611, 614, 617, 621, 626, 631, 636, 640, 645, 651, 658, 663, 668, 675, 683, 689, 692, 694, 693, 691, 686, 678, 668, 661, 653, 645, 637, 635, 633, 636, 640, 645, 641, 640, 641, 639, 637, 637, 636, 634, 637, 642, 646, 649, 649, 649, 651, 656, 662, 669, 672, 675, 684, 680, 642, 605, 578, 547, 525, 511, 500, 492, 491, 495, 500, 510, 516, 520, 524, 521, 516, 506, 495, 491, 484, 478, 471, 463, 458, 454, 450, 445, 440, 433, 429, 425, 421, 418, 417, 416, 415, 414, 416, 420, 441, 445, 466, 492, 502, 509, 518, 521, 516, 495, 484, 484, 473, 463, 456, 448, 440, 436, 431, 425, 420, 411, 405, 403, 397, 389, 384, 384, 380, 382, 378, 377, 374, 375, 401, 445, 488, 534, 581, 600, 615, 628, 632, 633, 628, 621, 612, 607, 597, 586, 575, 575, 574, 577, 578, 580, 583, 587, 590, 591, 593, 596, 602, 609, 614, 619, 623, 628, 634, 641, 648, 648, 653, 657, 656, 653, 648, 639, 628, 621, 616, 614, 609, 610, 615, 620, 623, 625, 625, 625, 624, 628, 633, 636, 638, 642, 647, 652, 657, 663, 669, 675, 681, 689, 696, 700, 702, 696, 664, 622, 578, 546, 517, 512, 507, 507, 509, 511, 514, 515, 516, 517, 519, 508, 500, 494, 490, 485, 478, 472, 469, 462, 454, 450, 445, 440, 436, 431, 426, 422, 420, 421, 421, 420, 418, 417, 416, 421, 432, 444, 452, 472, 491, 501, 512, 516, 509, 499, 483, 475, 466, 457, 447, 436, 427, 417, 406, 397, 390, 377, 370, 361, 355, 349, 341, 331, 326, 321, 316, 311, 307, 301, 306, 334, 375, 418, 472, 526, 567, 596, 606, 613, 613, 608, 602, 598, 596, 591, 582, 569, 554, 557, 560, 564, 567, 568, 569, 574, 578, 583, 588, 593, 598, 603, 607, 613, 621, 629, 633, 637, 647, 657, 664, 666, 669, 670, 666, 657, 647, 639, 633, 620, 615, 609, 616, 620, 623, 623, 623, 625, 627, 629, 631, 633, 635, 636, 639, 644, 649, 654, 658, 662, 667, 673, 679, 685, 690, 695, 696, 668, 634, 597, 557, 530, 516, 507, 506, 501, 498, 501, 504, 508, 514, 521, 514, 505, 496, 490, 485, 479, 472, 466, 461, 455, 449, 442, 434, 430, 425, 423, 422, 416, 411, 409, 408, 408, 408, 412, 427, 442, 457, 479, 501, 517, 523, 518, 512, 493, 483, 478, 472, 466, 458, 451, 444, 435, 427, 422, 414, 409, 403, 395, 390, 384, 378, 373, 371, 371, 369, 365, 367, 371, 383, 421, 464, 510, 555, 574, 593, 607, 618, 620, 616, 608, 597, 594, 585, 576, 564, 553, 553, 556, 558, 563, 567, 570, 567, 568, 569, 572, 576, 578, 584, 591, 598, 601, 604, 613, 622, 627, 630, 634, 638, 638, 638, 640, 634, 626, 621, 615, 608, 597, 596, 596, 600, 603, 604, 605, 605, 605, 605, 609, 613, 616, 619, 623, 627, 631, 636, 641, 645, 649, 657, 666, 673, 680, 687, 693, 693, 676, 642, 609, 570, 529, 505, 503, 500, 497, 496, 497, 496, 490, 487, 481, 467, 457, 448, 435, 421, 407, 395, 387, 382, 378, 376, 378, 380, 375, 375, 372, 368, 364, 363, 366, 366, 369, 372, 373, 371, 366, 362, 356, 354, 347, 344, 341, 342, 346, 351, 353, 355, 358, 361, 362, 364, 363, 364, 369, 371, 368, 372, 375, 378, 378, 376, 375, 374, 373, 374, 375, 376, 375, 373, 371, 373, 374, 372, 373, 377, 382, 386, 390, 396, 403]
trajectories[441]['y'] = -np.array([1167, 1174, 1178, 1183, 1185, 1193, 1199, 1200, 1181, 1131, 1075, 1017, 959, 906, 863, 822, 785, 753, 734, 718, 703, 693, 692, 693, 701, 722, 747, 772, 802, 839, 879, 921, 961, 993, 1004, 1012, 1024, 1040, 1066, 1092, 1114, 1144, 1168, 1176, 1160, 1126, 1054, 991, 938, 895, 854, 814, 780, 756, 735, 717, 701, 699, 702, 712, 729, 749, 770, 797, 830, 873, 918, 959, 993, 1007, 1006, 1001, 997, 999, 1006, 1013, 1027, 1047, 1073, 1100, 1131, 1163, 1190, 1186, 1169, 1137, 1093, 1039, 976, 921, 876, 838, 804, 771, 748, 729, 715, 706, 704, 705, 714, 738, 761, 787, 817, 854, 897, 940, 1000, 1012, 1034, 1081, 1082, 1115, 1158, 1165, 1180, 1174, 1137, 1147, 1057, 979, 973, 889, 834, 797, 766, 738, 714, 697, 686, 686, 685, 689, 701, 723, 749, 779, 810, 845, 887, 933, 966, 992, 1002, 1003, 994, 978, 971, 970, 976, 989, 1015, 1048, 1086, 1131, 1171, 1187, 1180, 1154, 1113, 1056, 997, 936, 900, 853, 809, 767, 738, 725, 708, 697, 692, 695, 705, 722, 743, 769, 798, 832, 872, 912, 942, 977, 1004, 1035, 1072, 1106, 1146, 1179, 1194, 1191, 1164, 1119, 1045, 975, 918, 872, 830, 789, 750, 714, 694, 680, 667, 659, 659, 663, 671, 689, 713, 740, 771, 809, 852, 897, 937, 963, 976, 980, 984, 986, 998, 1009, 1025, 1049, 1079, 1112, 1146, 1169, 1188, 1178, 1151, 1100, 1029, 965, 907, 855, 810, 771, 737, 707, 683, 662, 645, 639, 643, 648, 657, 673, 697, 727, 763, 802, 844, 887, 932, 975, 1005, 1027, 1056, 1089, 1119, 1151, 1171, 1170, 1150, 1114, 1049, 970, 906, 855, 810, 766, 722, 690, 665, 638, 618, 610, 603, 599, 605, 619, 637, 662, 692, 730, 772, 822, 874, 915, 944, 946, 945, 945, 946, 949, 952, 965, 978, 994, 1020, 1052, 1088, 1122, 1149, 1181, 1192, 1167, 1116, 1058, 998, 938, 905, 862, 815, 773, 734, 705, 691, 680, 669, 667, 674, 686, 704, 724, 751, 783, 818, 856, 896, 934, 970, 1005, 1037, 1080, 1132, 1172, 1191, 1188, 1159, 1126, 1059, 981, 915, 865, 817, 769, 723, 687, 655, 631, 612, 596, 584, 578, 579, 592, 611, 634, 662, 697, 734, 772, 812, 855, 904, 940, 953, 962, 977, 994, 1009, 1028, 1062, 1092, 1120, 1145, 1168, 1186, 1181, 1156, 1108, 1048, 987, 928, 881, 839, 798, 763, 738, 720, 702, 684, 680, 690, 700, 714, 733, 759, 791, 827, 871, 916, 950, 982, 1007, 1026, 1054, 1091, 1126, 1155, 1172, 1163, 1145, 1115, 1034, 969, 915, 862, 809, 761, 730, 705, 676, 653, 644, 634, 629, 627, 634, 653, 678, 704, 735, 772, 819, 866, 912, 951, 981, 974, 971, 968, 968, 976, 984, 991, 999, 1019, 1049, 1086, 1124, 1158, 1185, 1181, 1159, 1119, 1066, 1005, 943, 894, 847, 802, 765, 730, 701, 683, 673, 668, 666, 672, 683, 700, 722, 747, 778, 813, 851, 890, 932, 973, 1004, 1033, 1063, 1102, 1143, 1177, 1198, 1190, 1164, 1108, 1048, 971, 897, 844, 797, 751, 706, 661, 630, 610, 593, 578, 565, 563, 566, 574, 585, 606, 631, 660, 694, 735, 783, 835, 890, 931, 952, 962, 966, 975, 990, 1005, 1021, 1044, 1063, 1079, 1089, 1096, 1101, 1103, 1100, 1100, 1099, 1100, 1100, 1100, 1101, 1101, 1100, 1097, 1088, 1091, 1091, 1093, 1095, 1097, 1099, 1112, 1129, 1141, 1155, 1167, 1170, 1174, 1170, 1168, 1178, 1184, 1178, 1155, 1129, 1104, 1084, 1065, 1050, 1037, 1032, 1032, 1032, 1035, 1044, 1052, 1058, 1065, 1072, 1080, 1086, 1091, 1095, 1099, 1103, 1103, 1102, 1102, 1104, 1102, 1100, 1101, 1106, 1109, 1105, 1100, 1099, 1099, 1099, 1101, 1106, 1115, 1124, 1137, 1156])

trajectories[423] = {}
trajectories[423]['x'] = [720, 720, 719, 718, 712, 706, 698, 692, 690, 683, 681, 680, 677, 676, 677, 680, 685, 686, 687, 689, 690, 691, 693, 694, 692, 692, 691, 690, 689, 687, 681, 675, 676, 670, 662, 655, 651, 647, 643, 643, 643, 643, 642, 643, 643, 646, 648, 649, 650, 654, 658, 660, 665, 670, 672, 676, 681, 686, 690, 698, 693, 691, 692, 690, 693, 692, 693, 694, 698, 701, 704, 706, 711, 711, 718, 723, 722, 720, 724, 720, 718, 718, 717, 716, 714, 709, 703, 699, 693, 685, 677, 669, 662, 649, 636, 623, 611, 604, 599, 596, 599, 600, 598, 598, 600, 601, 606, 609, 608, 612, 615, 618, 621, 626, 630, 634, 638, 643, 649, 654, 658, 663, 669, 680, 689, 684, 675, 676, 674, 669, 669, 668, 668, 671, 673, 679, 681, 685, 690, 694, 696, 699, 703, 702, 704, 702, 705, 706, 707, 706, 701, 695, 690, 690, 679, 675, 669, 662, 657, 649, 640, 619, 603, 590, 576, 567, 564, 562, 563, 562, 560, 559, 556, 555, 555, 556, 558, 559, 560, 564, 569, 575, 577, 578, 579, 583, 588, 593, 597, 601, 606, 615, 623, 630, 642, 651, 658, 659, 663, 667, 672, 675, 681, 688, 693, 699, 704, 705, 706, 708, 710, 710, 710, 711, 711, 709, 707, 706, 705, 700, 700, 697, 688, 680, 673, 667, 658, 644, 629, 615, 605, 598, 592, 592, 597, 600, 600, 601, 602, 603, 604, 605, 607, 610, 613, 618, 624, 631, 637, 640, 642, 646, 653, 658, 663, 669, 678, 687, 684, 683, 679, 676, 672, 671, 672, 671, 672, 676, 680, 683, 688, 693, 697, 699, 700, 702, 703, 699, 698, 696, 693, 691, 688, 683, 678, 675, 670, 661, 652, 647, 642, 633, 621, 608, 595, 578, 563, 554, 554, 552, 546, 542, 540, 540, 540, 539, 538, 537, 536, 535, 536, 538, 541, 544, 546, 546, 545, 549, 553, 557, 561, 565, 566, 569, 581, 591, 601, 612, 613, 622, 630, 634, 642, 647, 652, 657, 660, 666, 668, 671, 674, 677, 678, 679, 679, 679, 680, 681, 681, 679, 677, 674, 670, 665, 660, 654, 648, 642, 635, 627, 617, 603, 590, 580, 572, 571, 573, 573, 574, 574, 574, 574, 576, 578, 580, 583, 585, 588, 594, 599, 604, 608, 611, 614, 617, 622, 627, 632, 640, 647, 654, 661, 662, 665, 666, 664, 660, 656, 654, 654, 654, 655, 658, 662, 665, 668, 671, 673, 671, 671, 673, 672, 671, 671, 669, 668, 666, 664, 661, 656, 652, 648, 644, 640, 635, 628, 615, 601, 585, 575, 574, 571, 570, 569, 566, 564, 564, 564, 564, 564, 565, 565, 566, 568, 570, 574, 579, 584, 587, 590, 593, 596, 600, 604, 611, 618, 622, 623, 624, 630, 635, 643, 651, 658, 665, 672, 676, 680, 684, 687, 693, 699, 702, 704, 707, 708, 709, 709, 703, 701, 699, 696, 691, 684, 676, 675, 667, 659, 654, 649, 644, 641, 631, 622, 604, 589, 578, 578, 577, 577, 577, 578, 580, 582, 582, 582, 585, 587, 590, 595, 602, 606, 613, 621, 626, 630, 635, 641, 647, 653, 660, 670, 678, 685, 695, 689, 678, 672, 668, 668, 661, 656, 652, 651, 650, 652, 658, 666, 671, 676, 681, 685, 687, 687, 686, 687, 688, 689, 688, 687, 684, 681, 679, 676, 670, 666, 666, 661, 650, 648, 633, 614, 592, 571, 558, 552, 548, 547, 547, 551, 553, 553, 551, 553, 554, 555, 557, 559, 563, 566, 569, 575, 580, 585, 591, 596, 600, 603, 608, 614, 620, 627, 635, 642, 645, 650, 655, 661, 665, 666, 668, 671, 674, 677, 681, 687, 691, 695, 699, 699, 697, 697, 696, 690, 684, 685, 682, 680, 676, 672, 669, 659, 655, 650, 637, 627, 615, 601, 590, 576, 567, 564, 564, 573, 574, 577, 579, 583, 589, 595, 599, 602, 606, 611, 617, 625, 633, 641, 650, 659, 668, 676, 684, 693, 702, 711, 720, 728, 732, 723, 714, 702, 699, 697, 697, 697, 697, 698, 697, 698, 699, 698, 696, 693, 692, 690, 688, 687, 685, 681, 679, 678, 673, 668, 668, 667, 667, 663, 660, 657, 658, 653, 650, 651, 653, 658, 663, 664, 660, 660, 658, 656, 654, 652, 649, 645, 642, 639, 638, 639, 642, 646, 652, 658, 663, 666, 669, 673, 677, 679, 680, 681, 682, 684, 686, 685, 685, 686, 687, 688, 688, 687, 685, 685, 685, 686, 689, 692, 695, 698, 698, 697, 695, 693, 693, 695, 693, 693, 693, 693, 691, 688, 686, 684, 682, 681, 682, 683, 685, 686, 686, 686, 686, 682 ]
trajectories[423]['y'] = -np.array([1163, 1175, 1179, 1183, 1189, 1196, 1198, 1197, 1202, 1198, 1195, 1194, 1190, 1187, 1188, 1187, 1190, 1193, 1194, 1194, 1194, 1197, 1199, 1201, 1203, 1203, 1203, 1204, 1206, 1209, 1209, 1209, 1211, 1211, 1207, 1185, 1157, 1110, 1058, 999, 943, 900, 861, 826, 800, 780, 763, 752, 748, 748, 753, 769, 790, 815, 844, 876, 908, 939, 973, 1000, 1014, 1021, 1032, 1045, 1054, 1061, 1068, 1072, 1076, 1079, 1081, 1079, 1082, 1081, 1083, 1083, 1083, 1086, 1084, 1080, 1077, 1080, 1083, 1087, 1091, 1100, 1110, 1124, 1141, 1158, 1178, 1193, 1205, 1212, 1209, 1190, 1157, 1081, 1007, 938, 888, 829, 765, 706, 658, 622, 602, 577, 556, 541, 528, 528, 531, 539, 557, 575, 599, 631, 669, 711, 756, 807, 868, 927, 968, 977, 998, 1007, 1016, 1040, 1052, 1061, 1080, 1092, 1095, 1104, 1109, 1111, 1118, 1123, 1126, 1128, 1129, 1133, 1134, 1133, 1134, 1132, 1128, 1123, 1123, 1126, 1130, 1133, 1146, 1154, 1169, 1183, 1194, 1207, 1219, 1209, 1191, 1157, 1097, 1029, 960, 903, 849, 794, 740, 696, 663, 636, 613, 593, 582, 574, 572, 577, 589, 611, 635, 660, 688, 718, 756, 815, 875, 924, 964, 988, 1005, 1018, 1032, 1045, 1057, 1067, 1081, 1090, 1096, 1103, 1108, 1112, 1118, 1122, 1124, 1127, 1128, 1128, 1128, 1126, 1123, 1121, 1120, 1120, 1121, 1121, 1121, 1132, 1140, 1148, 1162, 1178, 1194, 1205, 1214, 1220, 1210, 1185, 1143, 1069, 995, 930, 877, 826, 772, 720, 681, 651, 623, 599, 582, 568, 557, 557, 566, 582, 603, 629, 656, 685, 723, 767, 817, 869, 924, 969, 993, 1000, 1011, 1018, 1029, 1039, 1047, 1058, 1064, 1071, 1077, 1082, 1090, 1098, 1105, 1104, 1107, 1108, 1109, 1109, 1107, 1107, 1110, 1112, 1116, 1121, 1129, 1140, 1151, 1162, 1177, 1192, 1207, 1219, 1223, 1219, 1209, 1176, 1119, 1049, 971, 903, 847, 792, 739, 689, 647, 613, 586, 561, 546, 537, 533, 530, 538, 558, 574, 594, 622, 655, 694, 734, 782, 835, 896, 947, 967, 985, 1004, 1020, 1029, 1041, 1050, 1060, 1067, 1073, 1079, 1083, 1088, 1094, 1100, 1107, 1112, 1113, 1116, 1119, 1121, 1123, 1127, 1129, 1128, 1128, 1129, 1135, 1142, 1149, 1156, 1165, 1178, 1190, 1200, 1206, 1209, 1198, 1171, 1121, 1050, 972, 905, 843, 789, 734, 682, 641, 609, 581, 555, 535, 521, 511, 511, 517, 530, 547, 569, 593, 620, 653, 696, 744, 795, 850, 908, 962, 983, 995, 1009, 1024, 1033, 1040, 1047, 1053, 1058, 1065, 1073, 1077, 1082, 1087, 1092, 1097, 1105, 1113, 1115, 1115, 1117, 1122, 1126, 1130, 1133, 1142, 1154, 1164, 1175, 1188, 1204, 1221, 1230, 1232, 1224, 1201, 1152, 1080, 1001, 927, 868, 811, 746, 691, 651, 615, 581, 551, 529, 514, 506, 500, 499, 507, 525, 548, 577, 609, 642, 680, 723, 774, 832, 890, 936, 950, 970, 991, 1016, 1042, 1068, 1093, 1115, 1132, 1143, 1148, 1150, 1157, 1164, 1170, 1170, 1166, 1167, 1168, 1167, 1159, 1158, 1160, 1155, 1150, 1151, 1155, 1162, 1167, 1178, 1190, 1202, 1214, 1224, 1234, 1234, 1215, 1186, 1150, 1083, 1000, 923, 866, 812, 751, 698, 649, 609, 577, 547, 518, 497, 484, 475, 473, 476, 489, 512, 532, 561, 596, 636, 682, 730, 785, 846, 912, 968, 993, 1002, 1010, 1022, 1039, 1055, 1071, 1090, 1111, 1128, 1141, 1153, 1160, 1164, 1169, 1173, 1173, 1171, 1164, 1161, 1158, 1154, 1150, 1147, 1147, 1152, 1157, 1160, 1164, 1176, 1191, 1204, 1218, 1228, 1231, 1232, 1223, 1205, 1168, 1097, 1020, 944, 877, 818, 756, 698, 650, 613, 577, 548, 522, 500, 483, 476, 473, 472, 487, 507, 527, 550, 584, 624, 664, 708, 756, 808, 865, 917, 954, 976, 998, 1021, 1047, 1069, 1084, 1092, 1100, 1108, 1114, 1118, 1118, 1120, 1123, 1126, 1124, 1124, 1127, 1126, 1123, 1120, 1123, 1124, 1130, 1139, 1148, 1166, 1184, 1196, 1208, 1223, 1230, 1219, 1212, 1188, 1144, 1080, 1001, 927, 861, 800, 738, 686, 647, 603, 567, 539, 515, 494, 475, 468, 470, 474, 483, 507, 534, 563, 594, 629, 678, 735, 792, 852, 904, 933, 958, 987, 1016, 1047, 1077, 1103, 1117, 1129, 1139, 1147, 1152, 1157, 1161, 1164, 1167, 1165, 1159, 1158, 1155, 1148, 1144, 1146, 1143, 1139, 1138, 1143, 1143, 1147, 1150, 1153, 1153, 1152, 1149, 1146, 1138, 1118, 1107, 1101, 1096, 1089, 1084, 1080, 1080, 1084, 1089, 1096, 1093, 1091, 1088, 1085, 1082, 1081, 1080, 1079, 1078, 1078, 1077, 1075, 1074, 1074, 1075, 1075, 1075, 1075, 1076, 1078, 1077, 1077, 1078, 1079, 1080, 1078, 1077, 1076, 1076, 1075, 1074, 1074, 1075, 1076, 1077, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1091, 1092, 1091, 1091, 1091, 1091, 1090, 1088, 1085, 1081, 1079, 1078, 1078, 1079, 1081, 1084])

max_x = max(trajectories[siteswaps[0]]['x'])
min_x = min(trajectories[siteswaps[0]]['x'])
max_y = max(trajectories[siteswaps[0]]['y'])
min_y = min(trajectories[siteswaps[0]]['y'])
for ss in siteswaps:
    if max(trajectories[ss]['x']) > max_x:
        max_x = max(trajectories[ss]['x'])
    elif min(trajectories[ss]['x']) < min_x:
        min_x = min(trajectories[ss]['x'])
    if max(trajectories[ss]['y']) > max_y:
        max_y = max(trajectories[ss]['y'])
    elif min(trajectories[ss]['y']) < min_y:
        min_y = min(trajectories[ss]['y'])

def fig_ss(ss, data_x, data_y, max_x, min_x, max_y, min_y, margin=25):
    fig = plt.figure(constrained_layout=True)
    fig.suptitle("Analisis ss " + ss)
    axs = fig.subplot_mosaic([['Left', 'TopRight'],['Left', 'BottomRight']],
                            gridspec_kw={'width_ratios':[2, 1]})
    axs['Left'].tick_params(left = False, right = False , labelleft = False ,
                    labelbottom = False, bottom = False)
    axs['Left'].set_xlim([min_x-margin, max_x+margin])
    axs['Left'].set_ylim([min_y-margin, max_y+margin])
    axs['TopRight'].tick_params(left = False, right = False , labelleft = False ,
                    labelbottom = False, bottom = False)
    #axs['TopRight'].set_xlim([min_x-margin, max_x+margin])
    axs['BottomRight'].tick_params(left = False, right = False , labelleft = False ,
                    labelbottom = False, bottom = False)
    axs['BottomRight'].set_ylim([min_y-margin, max_y+margin])
    axs['Left'].set_title('Trayectoria general')
    axs['Left'].plot(data_x,data_y)
    #axs['Left'].set_ylim([min_y-100, max_y+100])
    axs['TopRight'].set_title('Cambios eje x')
    #axs['TopRight'].set_xlim([min_x, max_x])
    axs['TopRight'].plot(data_x)
    ret_x = argrelmin(np.array(data_x))[0]
    for x in ret_x:
        axs['TopRight'].axvline(x = x, color = 'black', linewidth=0.5, label = 'axvline - full height')
    # Añadir en caso de querer tener mas puntos para ver minimos locales
    """ xnew = np.linspace(0, len(data_x), 300) 
    spl = make_interp_spline(range(len(data_x)), data_x, k=3)  # type: BSpline
    data_x_smooth = spl(xnew)
    axs['TopRight'].plot(xnew, data_x_smooth) """

    axs['BottomRight'].set_title('Cambios eje y')
    axs['BottomRight'].plot(data_y)
    ret_y = argrelmin(np.array(data_y))[0]
    for x in ret_y:
        axs['BottomRight'].axvline(x = x, color = 'black', linewidth=0.5, label = 'axvline - full height')
    ret_y2 = argrelmin(np.array(data_y), order=2)[0]
    for x in ret_y2:
        axs['BottomRight'].axvline(x = x, color = 'red', linewidth=1, label = 'axvline - full height')


    for p in ret_y2:
        axs['Left'].plot(data_x[p],data_y[p], marker='o', markersize=3, markeredgecolor="red", markerfacecolor="red")

    

    """ ret_y2 = argrelextrema(np.array(data_y), np.less, order=2)[0]
    for p in ret_y2:
        c1 = plt.Circle((data_x[p],data_y[p]), 5, color='g', fill=False)
        axs['Left'].add_patch(c1)

    ret_y3 = argrelextrema(np.array(data_y), np.less, order=3)[0]
    for p in ret_y3:
        c1 = plt.Circle((data_x[p],data_y[p]), 4, color='b', fill=False)
        axs['Left'].add_patch(c1) """
    

for ss in siteswaps:
    fig_ss(str(ss), trajectories[ss]['x'][:max_frames], trajectories[ss]['y'][:max_frames], max_x, min_x, max_y, min_y)


plt.show()